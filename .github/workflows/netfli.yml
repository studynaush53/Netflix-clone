name: Build,Analyze,Scan

on:
  push:
    branches:
      - main


jobs:
  build-analyze-scan:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name:  install Trvy
        run: |
          #install trivy
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
          #command to scan files
          trivy fs .
      
      - name : Build Docker image netflix
        run: |
          # Run docker commands 
          docker build --build-arg TMDB_V3_API_KEY=4553fced05e484f2a9d593e0fbc9ff85 -t netflix .
          docker tag netflix naush53/netflix:latest
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push naush53/netflix:latest
        env: 
          DOCKER_CLI_ACL: 1

  deploy: 
  needs: build-analyze-scan
  runs-on: [aws-netflix]
  steps:
    - name:  Pull Dokcer image
      run: docker pull naush53/netflix:latest
    - name: Run Trivy imagescan 
      run: trivy image naush53/netflix:latest
    - name: Run netflix container
      run: docker run -d --name:sopranoss -p 8081:80 naush53/netflix:latest
